import { create } from 'zustand';
import { persist } from 'zustand/middleware';

export const useDoctorProfileStore = create(
  persist(
    (set, get) => ({
      // Initial state
      firstName: '',
      lastName: '',
      dateOfBirth: '',
      gender: '',
      address: '',
      nationality: '',
      country: '',
      language: '',
      email: '',
      phone: '',
      specialization: '',
      experience: '',
      role: '',
      profilePic:'',
      subspecialties: '',
      languageOfConsultation: '',
      emergencyAvailability: '',
      licenseNumber: '',
      countryOfLicense: '',
      licenseStartDate: '',
      licenseExpiryDate: '',
      cvResumeFileName: '',
      timeZone: '',
      telemedicinePlatform: '',
      consultationFee: '',
      followUpFee: '',
      prescriptionAuthority: '',
      labsImagingOrderRights: '',
      acceptTerms: false,
      consentTelemedicine: false,
      dataProtectionAcknowledgment: false,
      submitTerms: false,
      submitTelemedicine: false,
      submitDataProtectionAcknowledgment: false,
      lastSavedState: null,

      // Actions
      setFirstName: (firstName) => set({ firstName }),
      setLastName: (lastName) => set({ lastName }),
      setDateOfBirth: (dateOfBirth) => set({ dateOfBirth }),
      setGender: (gender) => set({ gender }),
      setAddress: (address) => set({ address }),
      setNationality: (nationality) => set({ nationality }),
      setCountry: (country) => set({ country }),
      setLanguage: (language) => set({ language }),
      setEmail: (email) => set({ email }),
      setPhone: (phone) => set({ phone }),
      setProfilePic: (profilePic) => set({profilePic}),
      setSpecialization: (specialization) => set({ specialization }),
      setExperience: (experience) => set({ experience }),
      setRole: (role) => set({ role }),
      setSubspecialties: (subspecialties) => set({ subspecialties }),
      setLanguageOfConsultation: (languageOfConsultation) => set({ languageOfConsultation }),
      setEmergencyAvailability: (emergencyAvailability) => set({ emergencyAvailability }),
      setLicenseNumber: (licenseNumber) => set({ licenseNumber }),
      setCountryOfLicense: (countryOfLicense) => set({ countryOfLicense }),
      setLicenseStartDate: (licenseStartDate) => set({ licenseStartDate }),
      setLicenseExpiryDate: (licenseExpiryDate) => set({ licenseExpiryDate }),
      setCvResumeFileName: (cvResumeFileName) => set({ cvResumeFileName }),
      setTimeZone: (timeZone) => set({ timeZone }),
      setTelemedicinePlatform: (telemedicinePlatform) => set({ telemedicinePlatform }),
      setConsultationFee: (consultationFee) => set({ consultationFee }),
      setFollowUpFee: (followUpFee) => set({ followUpFee }),
      setPrescriptionAuthority: (prescriptionAuthority) => set({ prescriptionAuthority }),
      setLabsImagingOrderRights: (labsImagingOrderRights) => set({ labsImagingOrderRights }),
      setAcceptTerms: (acceptTerms) => set({ acceptTerms }),
      setConsentTelemedicine: (consentTelemedicine) => set({ consentTelemedicine }),
      setDataProtectionAcknowledgment: (dataProtectionAcknowledgment) => set({ dataProtectionAcknowledgment }),
      setSubmitTerms: (submitTerms) => set({ submitTerms }),
      setSubmitTelemedicine: (submitTelemedicine) => set({ submitTelemedicine }),
      setSubmitDataProtectionAcknowledgment: (submitDataProtectionAcknowledgment) =>
        set({ submitDataProtectionAcknowledgment }),
      setProfileData: (data) => set((state) => ({ ...state, ...data })),
      saveAllProfileData: () => {
        const currentState = get();
        const {
          firstName,
          lastName,
          dateOfBirth,
          gender,
          address,
          profilePic,
          nationality,
          country,
          language,
          email,
          phone,
          specialization,
          experience,
          role,
          subspecialties,
          languageOfConsultation,
          emergencyAvailability,
          countryOfLicense,
          licenseStartDate,
          licenseExpiryDate,
          cvResumeFileName,
          timeZone,
          telemedicinePlatform,
          consultationFee,
          followUpFee,
          prescriptionAuthority,
          labsImagingOrderRights,
          acceptTerms,
          consentTelemedicine,
          dataProtectionAcknowledgment,
          submitTerms,
          submitTelemedicine,
          submitDataProtectionAcknowledgment,
        } = currentState;

        set({
          lastSavedState: {
            firstName,
            lastName,
            dateOfBirth,
            gender,
            address,
            nationality,
            country,
            profilePic,
            language,
            email,
            phone,
            specialization,
            experience,
            role,
            subspecialties,
            languageOfConsultation,
            emergencyAvailability,
            countryOfLicense,
            licenseStartDate,
            licenseExpiryDate,
            cvResumeFileName,
            timeZone,
            telemedicinePlatform,
            consultationFee,
            followUpFee,
            prescriptionAuthority,
            labsImagingOrderRights,
            acceptTerms,
            consentTelemedicine,
            dataProtectionAcknowledgment,
            submitTerms,
            submitTelemedicine,
            submitDataProtectionAcknowledgment,
          },
        });
      },
      
      discardChanges: () => {
        const lastSaved = get().lastSavedState;
        if (lastSaved) {
          set({ ...lastSaved });
        }
      },
    }),
    {
      name: 'doctor-profile-storage',
      getStorage: () => localStorage,
    },
  ),
);
